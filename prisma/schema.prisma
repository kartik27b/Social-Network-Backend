datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// model Profile {
//   id            Int     @id @default(autoincrement())
//   profilePicUrl String?
//   user          User    @relation(fields: [userId], references: [id])
//   userId        Int     @unique
// }

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  body      String
  photoUrl  String?
  videoUrl  String?
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  likes     Like[]
  comments  Comment[]
}

model Comment {
  id       Int    @id @default(autoincrement())
  body     String
  postId   Int
  post     Post   @relation(fields: [postId], references: [id])
  author   User   @relation(fields: [authorId], references: [id])
  authorId Int
}

enum Role {
  USER
}

model Like {
  post   Post @relation(fields: [postId], references: [id])
  postId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@id([postId, userId])
}

model User {
  id                    Int            @id @default(autoincrement())
  username              String         @unique
  password              String
  profilePicUrl         String?
  posts                 Post[]
  comments              Comment[]
  role                  Role           @default(USER)
  likes                 Like[]
  followedBy            User[]         @relation("UserFollows", references: [id])
  following             User[]         @relation("UserFollows", references: [id])
  myConversations       Conversation[]
  receivedConversations Conversation[] @relation(name: "UserConversations")
  messages              Message[]
}

model Conversation {
  id                Int       @id @default(autoincrement())
  userId            Int
  user              User      @relation(fields: [userId], references: [id])
  receiverId        Int
  receiver          User      @relation(name: "UserConversations", fields: [receiverId], references: [id])
  conversation_hash String    @unique
  messages          Message[]
}

model Message {
  id               Int          @id @default(autoincrement())
  creatorId        Int
  creator          User         @relation(fields: [creatorId], references: [id])
  conversationHash String
  conversation     Conversation @relation(fields: [conversationHash], references: [conversation_hash])
  createdAt        DateTime     @default(now())
  message          String
}
